import * as React from 'react';
import type { ViewProps, StyleProp, ViewStyle, PressableStateCallbackType, FlatListProps, VirtualizedListProps, ScrollViewProps } from 'react-native';
interface PressableStateCallbackTypeWeb extends PressableStateCallbackType {
    focused?: boolean;
    hovered?: boolean;
}
declare type ChildrenType = React.ReactNode | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);
declare type StylesType = StyleProp<ViewStyle> | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);
interface HoverableProps extends ViewProps {
    children: React.ReactNode | ((state: {
        hovered: boolean;
    }) => React.ReactNode);
}
interface PressableProps extends Omit<ViewProps, 'style'> {
    children: ChildrenType;
    style?: StylesType;
}
export declare function Hoverable({ children, ...rest }: HoverableProps): JSX.Element;
export declare const Pressable: React.ForwardRefExoticComponent<PressableProps & React.RefAttributes<unknown>>;
export declare const ScrollView: React.ElementType<ScrollViewProps>;
export declare const FlatList: React.ElementType<FlatListProps<unknown>>;
export declare const VirtualizedList: React.ElementType<VirtualizedListProps<unknown>>;
export {};
