{"version":3,"sources":["index.tsx"],"names":["isServer","process","release","name","hoverListener","createHoverListener","Hoverable","children","rest","hostRef","React","useRef","hovered","setHovered","useState","useEffect","hr","current","add","remove","PressableWithoutRef","style","forwardedRef","setRef","setAndForwardRef","getForwardedRef","setLocalRef","hostNode","interactionState","containsEvent","parent","clickTarget","child","childNodes","hasMouse","window","matchMedia","matches","refs","Map","previousHoverFunc","mousePosition","x","y","hover","target","hoverFunc","get","r","keys","hoverEvent","event","unhover","captureMousePosition","pageX","pageY","document","onmouseover","onmousemove","ontouchstart","ontouchend","ontouchcancel","ontouchmove","ref","set","delete","forwardRef","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","onScrollInner","e","elementFromPoint","props","Pressable","ScrollView","NativeScrollView","FlatList","NativeFlatList","VirtualizedList","NativeVirtualizedList"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n"]}